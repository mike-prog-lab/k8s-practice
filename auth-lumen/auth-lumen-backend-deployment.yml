apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-lumen
  namespace: auth-lumen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-lumen
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: auth-lumen
        tier: backend
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1001
      volumes:
        # - name: code
        #   persistentVolumeClaim:
        #     claimName: code
        - name: public-code
          emptyDir: {}
        - name: config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: site.conf
      initContainers:
        - name: app-data
          image: ghcr.io/mike-prog-lab/auth-tasks-lumen/auth-tl-php-fpm:development
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "cp -r /var/www/html/public/. /code/public"]
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - name: public-code
              mountPath: /code/public
      containers:
        - name: auth-lumen
          image: ghcr.io/mike-prog-lab/auth-tasks-lumen/auth-tl-php-fpm:development
          securityContext:
            runAsUser: 1000
          env:
          - name: APP_NAME
            valueFrom:
              configMapKeyRef:
                name: auth-lumen-configmap
                key: app_name
          - name: APP_KEY
            valueFrom:
              secretKeyRef:
                name: auth-lumen-secret
                key: key
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: auth-lumen-secret
                key: jwt_secret
          - name: DB_CONNECTION
            valueFrom:
              configMapKeyRef:
                name: auth-lumen-configmap
                key: db_connection
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: db-configmap
                key: port
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: db-configmap
                key: host
          - name: DB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: db-configmap
                key: db_name
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: password
          resources:
            limits:
              memory: "128Mi"
              cpu: "150m"
          volumeMounts:
            - name: public-code
              mountPath: /var/www/html/public
          ports:
          - containerPort: 9000
        - name: nginx
          image: nginxinc/nginx-unprivileged
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          resources:
            limits:
              memory: "60Mi"
              cpu: "150m"
          ports:
          - containerPort: 8080
            protocol: TCP
            name: http
          volumeMounts:
            - name: public-code
              mountPath: /var/www/html/public
            - name: config
              mountPath: /etc/nginx/conf.d
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: auth-lumen-service
  namespace: auth-lumen
  labels:
    tier: backend
spec:
  selector:
    app: auth-lumen
    tier: backend
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: fpm
